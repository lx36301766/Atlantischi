package protobuf.server;

import "common_enum.proto";

//1.2.模板
//消息模版
message CMsg
{
    required CMsgHead msgHead = 1; //消息头
    optional CMsgBodyDeviceStatus deviceStatusBody = 2;//柜机状态消息体
    optional CMsgBodyDeviceOpen openDeviceBody = 3;//开柜指令消息体
    optional CMsgBodyDeviceAck openDeviceAckBody = 4;//电源取走或归还响应消息体
    optional CMsgBodyWifiSetupInfo wifiSetupInfoBody = 5;//柜机wifi设置成功推送消息到服务器
    optional CMsgBodyWifiSetupAck  wifiSetupAckBody = 6; //柜机wifi在服务器端处理后返回消息体
    optional CMsgBodyUpgrade upgrade =7;//柜机软件升级
    optional CMsgBodyInstallBatteryResult installBatteryResult=8;//安装电源结果，下一个卡槽
    optional CMsgBodyGetBatteryPassword getBatteryPasswordBody=9;//获取电源密码请求
    optional CMsgBodyGetBatteryPasswordAck getBatteryPasswordAckBody=10;//返回电源密码
    optional CMsgBodyUpgradeAck upgradeAck =11;//柜机软件升级响应
    optional CMsgBodyDeviceUpdate updateDeviceBody =12;//更新柜机参数
    optional CMsgBodyGsmSetupInfo gsmSetupInfoBody = 13;//柜机2G信息推送消息到服务器
    optional CMsgBodyGsmSetupAck gsmSetupAckBody =14; //柜机2G在服务器端处理后返回消息
    optional CMsgBodyGsmFlowInfo gsmFlowInfoBody =15; //柜机2G损耗流量上报到服务器
    optional CMsgBodyGsmFlowAck gsmFlowAckBody =16; //服务器返回收到流量的确认信息
    optional CMsgBodyBatteryBack backBatteryBody = 17; //一件归还
    optional CMsgBodyWifiClearInfo clearwifiInfoBody = 18; //服务器推送清空wifi指令到柜机
    optional CMsgBodyWifiClearAck clearWifiAckBody = 19;//回复服务器是否成功清空wifi信息
    optional CMsgBodyDeviceOfflineStatus OfflineStatusBody = 20; //上报柜机离线状态原因(1.柜机上次重启的原因 或 2.柜机最近一次连不上服务器的原因)
    optional CMsgBodyDeviceOfflineAck OfflineAckBody = 21;	//服务器返回收到柜机离线原因的信息
    optional CMsgBodyDeviceRebootSys rebootSysBody=22;		 //柜机上报即将重启
    optional CMsgBodyDeviceRebootSysAck rebootSysAckBody=23; //服务器告知柜机，柜机此时会重启。

    //大柜机专用指令
    optional CMsgBodyAdvScheduleList advScheduleListBody = 1001; //广告排期数据下发
    optional CMsgBodyAdvScheduleListReport advScheduleListAck = 1002; //广告排期柜机执行状态上报
    optional CMsgBodyAdvPlayCount advPlayCount = 1003; //广告播放统计数据上报
    optional CMsgBodyAdvPlayCountAck advPlayCountAck = 1004; //广告播放统计数据上报服务器回执
    optional CMsgBodyBcUpgrade bcUpgrade = 1005;//大柜机升级指令
    optional CMsgBodyBcUpgradeAck bcUpgradeAck = 1006;//大柜机升级指令回执
    optional CMsgBodyQrCodeRequest qrCodeRequest = 1007;//大柜机二维码获取请求
    optional CMsgBodyQrCodeAck qrCodeAck = 1008;//大柜机二维码获取响应
    optional CMsgBodyUploadAppLog uploadAppLog = 1009;//触发大柜机上传App日志
}
//消息头
message CMsgHead
{
    required CMD cmd = 1;//指令信息
    optional string version = 2;//协议版本:q
    optional string tranid =3;//交易ID      36字节
    optional int32 groupid =4;//MQTT client分组编号
    optional int32  errcode = 5; //
    optional bool  heart_beat_flag = 6; //
}
//消息命令枚举
enum CMD
{
    STATUSREQ = 1; //状态同步请求（请求即时心跳）
    STATUSRES = 2;//状态同步响应（心跳）
    OPENDEV = 3;//打开设备（借还）
    OPENACK = 4;//设备响应（借还响应）

    SETUPWIFI = 5;//设置Wifi信息（设置WiFi）
    SETUPWIFIACK=6;//server 回复信息（设置WiFi响应）

    UPGRADE=7;//升级固件
    STARTINSTALLBATTERY=8;//开始安装电源
    STOPINSTALLBATTERY=9;//结束安装电源
    INSTALLBATTERYRESULT=10;//安装电源结果
    GETBATTERYPASSWORD =11;//获取电源密码请求
    GETBATTERYPASSWORDACK=12;//获取电源密码返回
    UPDATEDEVICEPARAMS=13;//更新柜机参数

    SETUPGSM = 14;//设置2G信息（设置2G）
    SETUPGSMACK=15;//server 回复信息（设置2G响应）

    UPLOADGSMFLOW= 16;//上报2g流量信息
    UPLOADGSMFLOWACK=17;//server 回复信息

    BACKBATTERY=18;//上报归还充电宝信息
    CLEARWIFIINFO=19;//清空柜机wifi信息
    CLEARWIFIACK=20; //柜机回复信息（清空柜机wifi信息响应）
    OFFLINESTATUS=21; //上报离线的原因
    OFFLINEACK=22;    //server 回复信息
    UPGRADEACK=23;//升级响应
    REBOOTSYS=24; //系统重启请求
    REBOOTSYSACK=25; //server 回复信息(系统重启)

    //大柜机专用指令部份
    ADV_SCHEDULE_LIST = 1001;//下发广告排期数据
    ADV_SCHEDULE_LIST_REPORT = 1002;//广告排期数据状态上报
    ADV_PLAY_COUNT = 1003;//广告播放统计数据上报
    ADV_PLAY_COUNT_Ack = 1004;//广告播放统计数据上报服务器回执
    BC_UPGRADE = 1005;//大柜机升级指令
    BC_UPGRADE_ACK = 1006;//大柜机升级指令接收回执
    QR_CODE_REQUEST = 1007;//大柜机二维码获取请求
    QR_CODE_ACK = 1008;//大柜机二维码获取响应
    UPLOAD_APP_LOG = 1009;//触发大柜机上传App日志
}
//2.实体列表
//2.1.卡槽
enum HEART_BEAT_DEVICE_CODE
{
    HBD_STATUS_OK = 0;//正常成功
    HBD_TEMPERATURE_ERROR = 1;//温度错误
    HBD_WIFI_ERROR = 2;//WIFI错误
    HBD_BLUE_ERROR = 3;//蓝牙错误
    HBD_IBEACON_ERROR = 4;//ibeacon错误
    HBD_CONFIG_FILE_ERROR = 5;//配置文件错误
    HBD_SYSTEM_ERROR = 6;//系统错误
    HBD_OTHER_ERROR = 7;//其他错误
}

message Slot
{
    required int32 num = 1;               // 从1开始
    required HEART_BEAT_SLOT_CODE status= 2;                    //好坏状态   0为状态正常，>=1 状态异常(错误码)
    optional string batterysn =3 ;     //为空的时候就是空卡槽
}
//2.2.电源
message Battery
{
    required string batterysn=1;  //电源sn
    required float  temprature = 2;  //电源温度
    required int32 voltage =3;   //电源电压
    required int32 fullChargeCapacity = 4; //电源最大容量（mAh)
    required int32 remainingCapacity = 5; //剩余容量（mAh)
    required int32 averageCurrent = 6;//充放电电流(mA)
    required int32 cycleCount = 7;   //循环次数
    required int32 bmsSafetyStatus =8;//异常状态，预留，BMS内部状态
    required int32 bmsFlags = 9;           //预留，BMS内部充满标志
    required HEART_BEAT_BATTERY_CODE status= 10;           //异常状态
    required ENABLE_BORROW_STATUS enableStatus = 11;           //可借标志(容量达到一定才能允许用户借）)
}

//2.3.柜机
message Device
{
    required string deviceid= 1;               // id
    optional float  armTemprature = 2;                   //ARM温度
    optional float  environmentTemprature = 3;                   //外部环境温度 
    optional string softwareVersion=4 ;     //软件版本
    optional string ipAddr=5 ;     //ip地址
    required HEART_BEAT_DEVICE_CODE status= 6;           //异常状态,各个部件的自检异常，运行异常
    optional string appVersion = 7;//大柜机app版本
}
//柜机动作类型枚举
enum PROJECTTYPE
{
	Y153X = 1;	//Y1534/Y1533
	Y1801=2;	//Y1801
}
message  Extended
{
	optional PROJECTTYPE type=1;
}
//3.消息列表
//3.1.心跳

//柜机状态
message CMsgBodyDeviceStatus
{
    required Device device = 1;
    repeated Battery battery = 2; 
    repeated Slot slot = 3 ;
    optional Extended extended=4; //心跳信息扩展
}

//柜机动作
message CMsgBodyDeviceOpen
{
    required DEVACTION action = 1;//动作指令
    required int32 num = 2;//卡槽编号   从零开始
    required string password = 3;//密码
}

message CMsgBodyBatteryBack
{
    required string deviceid = 1;//设备id
    required int32 num = 2;//卡槽编号
    required string batterysn= 3;//还的时候需要发送电源ID
    required BATTERY_BORROW_RETURN_CODE state=4;//电源取走或插入是否成功状态
}

//电源取走或插入响应
message CMsgBodyDeviceAck
{
    required DEVACTION action = 1;//动作指令
    required string deviceid = 2;//设备id
    required int32 num = 3;//卡槽编号
    required string batterysn= 4;//还的时候需要发送电源ID
    required BATTERY_BORROW_RETURN_CODE state=5;//电源取走或插入是否成功状态
}
//3.3.柜机升级
enum UPGRADESTATUS
{
    DOWNLOAD_OK= 0;      // 下载成功，准备升级           
    DOWNLOAD_FAIL= 1;      // 下载失败
}
//柜机升级软件
message CMsgBodyUpgrade
{
    required string version = 1;//软件版本号
    required string serverUrl = 2;//升级Url
    required string fileMd5sum = 3;//MD5(128-bit) checksums
    optional string force_time = 4;//格式hh(时):mm(分),
    optional int32 strategy = 5;// 是否需要强制升级，0：不强制升级，1：强制升级
}
//柜机升级响应
message CMsgBodyUpgradeAck
{
    required UPGRADESTATUS  upgradeStatus= 1;//升级状态
    optional string lastfail =2;//柜机升级失败的原因
    required string deviceid= 3;               // device id

}
//服务器发送更新参数命令
message  CMsgBodyDeviceUpdate
{
    required string cmd=1; //更新参数的命令（柜机直接执行该命令）
}
//3.4.安装WiFi
// Wifi密码类型
enum WIFIAUTHMODE
 {
    WIFIAUTHMODENONE = 0;      // 无密码                                                                                                                                                           
    WIFIAUTHMODEWPA = 1;       // WPA 
    WIFIAUTHMODEWPAPSK = 2;    // WPA-PSK
    WIFIAUTHMODEWPA2 = 3;      // WPA2
    WIFIAUTHMODEWPA2PSK = 4;   // WPA2-PSK
    WIFIAUTHMODESHARED = 5;    // WEP对应的认证模式
}
// Wifi密码加密方式
enum WIFIENCRYPT 
{
    WIFIENCRYPTNONE = 0; //none
    WIFIENCRYPTAES  = 1;  //aes
    WIFIENCRYPTTKIP = 2;     //tkip
    WIFIENCRYPTWEP = 3;     //wep
}
//联网方式（0:WiFi, 1:蓝牙, 2: 2G, 3: 4G）
enum CONNECTNETTYPE
{
    CONNECTNETWIFI =0;    //wifi
    CONNECTNETBLUE =1;   //blue
    CONNECTNET2G =2;     //2g
    CONNECTNET3G =3;     //3g
    CONNECTNET4G =4;     //4g
}
enum CURRENTNETSTATE
{
    CURRENTNETDISABLE =1;		//net disable
    CURRENTNETENABLE =2;		//net enable
}
//柜机设置wifi信息
message CMsgBodyWifiSetupInfo
{
    optional string ssid = 1;
    optional string password = 2;
    required CONNECTNETTYPE connectNetworkType = 3;//联网方式
    optional WIFIAUTHMODE wifiAuthMode = 4;//wifi密码类型
    optional WIFIENCRYPT WifiEncrypt = 5; //wifi密码加密方式
    required string deviceid = 6;//柜机id
    optional string modules_name = 7;//
    optional string ipaddr = 8;// ip address
    optional CURRENTNETSTATE currentNetState =9; //wifi 所处的网络的情况
}
//柜机设置wifi结果反馈
message CMsgBodyWifiSetupAck
{
    required RESCODE resCode = 1;//返回状态码 0网路配置失败,1网路配置成功
}
enum REALPLMN
{
	REALPLMNMOBILEGSM= 46000; //中国移动GSM
	REALPLMNUNICOMGSM= 46001; //中国联通GSM
	REALPLMNMOBILETD=  46002;  //中国移动TD-S
	REALPLMNCTCCDMA=   46003;  //中国电信CDMA

	REALPLMNCTC4G     = 46005;	//中国电信4G
	REALPLMNUNICOM4G  = 46006;	//中国联通4G
	REALPLMNMOBILE4G = 46007;		//中国移动4G
}

//柜机设置2G信息
message CMsgBodyGsmSetupInfo
{
    required CONNECTNETTYPE connectNetworkType = 1;//联网方式
    required string deviceid = 2;//柜机id
    optional string  imei= 3;//IMEI
    optional string iccid= 4;//iccid
    optional string imsi= 5;//imsi
    optional string modules_name= 6;// EC20(4G),M26(2G),G510(2G),L710(4G)
    optional string ipaddr= 7;	// 
    optional REALPLMN RealPLMN =8; //public land mobile network (PLMN),连上基站后的运营商信息。
    optional CURRENTNETSTATE currentNetState =9; //G网 所处的网络的情况
}
//柜机设置2G结果反馈
message CMsgBodyGsmSetupAck
{
    required RESCODE resCode = 1;//返回状态码 0网路配置失败,1网路配置成功
}

//server 返回状态码 0网路配置失败,1网路配置成功
enum RESCODE
{
    RESCODEFAIL=0;      //fail
    RESCODESUC=1;      //success
}
//柜机2G损耗流量上报到服务器
message CMsgBodyGsmFlowInfo
{
    required string deviceid = 1; //柜机id
    required int64 devUnixTime=2;//柜机unix时间
    required int64 gsmFlowBytes=3;//2g流量使用情况 Bytes(字节)
}
//服务器返回收到流量的确认信息
message CMsgBodyGsmFlowAck
{
    required RESCODE resCode = 1;//返回状态码 0确认收到正确信息，1确认收到错误信息
}
//3.5.安装电源
message CMsgBodyInstallBatteryResult
{
    required string deviceId =1;//柜机ID
    required int32 slotNum =2;//上一个卡槽序号
    required InstallBatteryResCode resCode =3;//电源安装结果
    required int32 nextSlotNum =4;//下一个卡槽序号 
    required InstallBatteryOpenCode openCode = 5;
}

message CMsgBodyGetBatteryPassword
{
    required string deviceId =1;//柜机ID
    required string batterySn= 2;//电源SN
}
message CMsgBodyGetBatteryPasswordAck
{
    required int32 resCode = 1;// 状态码：0表示获取失败，1表示获取成功
    required string deviceId =2;//柜机ID
    required string batterySn= 3;//电源SN
    required string batteryPassword= 4;//电源密码
}
message CMsgBodyWifiClearInfo
{

}
message CMsgBodyWifiClearAck
{
	required string deviceId =1;//柜机ID
	required RESCODE resCode = 2;//返回状态码 0清空wifi失败,1清空wifi成功
}
enum DEVICE_OFFLINE_STATUS_CODE
{
	DOS_SOFT_RESET=1;        //软复位
	DOS_HARD_RESET=2;		//硬复位	
}
message CMsgBodyDeviceOfflineStatus
{
	required string deviceId =1;//柜机ID
	required int64 devUnixtimestamp=2;//柜机离线的时间戳
	optional DEVICE_OFFLINE_STATUS_CODE state=3;//柜机离线的原因
}
message CMsgBodyDeviceOfflineAck
{
	required RESCODE resCode = 1;//服务器返回状态码 0未收到,1已收到
}

enum DEVICE_REBOOT_CODE
{
	DRC_UPGRADE_REBOOT=1;        //升级重启
}
message CMsgBodyDeviceRebootSys
{
	required string deviceId =1;//柜机ID
	required DEVICE_REBOOT_CODE state=2;  //即将重启的原因
}
message CMsgBodyDeviceRebootSysAck
{
	required RESCODE resCode = 1;//服务器返回状态码，1表示可以重启
}

//大柜机专用指令部份
//广告素材
message Material
{
    required int32 materialId = 1;  //素材id
    required string type = 2; //素材类型
    optional string title = 3; //素材标题
    required string url = 4; //素材地址
    optional int32 playTime = 5; //播放时间
    required string animationMode = 6; //动画类型
}
//播放列表
message PlayView
{
    required int32 playId = 1; //列表id
    optional string title = 2; //列表标题
    required string position = 3; //列表位置
    repeated Material material = 4; //素材列表
}
//排期消息体
message CMsgBodyAdvScheduleList
{
    required int32 scheduleId = 1;//排期id
    required int32 startTime = 2; //开始时间
    required int32 endTime = 3; //结束时间
    repeated PlayView playView = 4;//关联播放列表
}
//素材状态
enum AdvScheduleResCode
{
    RESCODE_RECIVE = 1;//接收成功
    RESCOD_DOWNLOAD = 2;//下载成功
    RESCOD_PLAYED = 3;//开始播放
}
//广告排期回执
message AdvScheduleListAck{
    required int32 scheduleId = 1;//排期id
    required int32 playId = 2;//列表id
    required int32 materialId = 3;//素材id
    required AdvScheduleResCode resCode = 4;//状态
}
//柜机上报广告排期状态回执
message CMsgBodyAdvScheduleListReport
{
    repeated AdvScheduleListAck advScheduleListAck = 1;//状态列表
}
//广告播放统计数据上报
message CMsgBodyAdvPlayCount
{
    required int32 scheduleId = 1;//排期id
    required int32 playId = 2;//列表id
    required int32 materialId = 3;//素材id
    required int32 playCount = 4;//播放次数
}
//广告播放统计数据上报服务器回执
message CMsgBodyAdvPlayCountAck
{
    required int32 scheduleId = 1;//排期id
    required int32 playId = 2;//列表id
    required int32 materialId = 3;//素材id
}
//大柜机升级target
enum UpgradeTarget
{
    APP = 1;//APP
    FIRMWARE = 2;//固件
}
//大柜机升级方式
enum UpgradeModel
{
    NOW = 1;//立即升级
    NEXT_RESTART = 2;//下次重启
    IN_TIME = 3;//指定时间
}
//大柜机升级指令
message CMsgBodyBcUpgrade
{
    required string version = 1;//软件版本号
    required string serverUrl = 2;//升级Url
    required string fileMd5sum = 3;//MD5(128-bit) checksums
    required UpgradeTarget upgradeTarget = 4;//升级目标
    required UpgradeModel upgradeModel = 5;//升级方式
    optional int32 upgradeTime = 6;//当升级方式为指定时间升级时，升级时间
}
enum BC_UPGRADESTATUS
{
    BC_DOWNLOAD_OK= 0;      // 下载成功，准备升级           
    BC_DOWNLOAD_FAIL= 1;      // 下载失败
}
//大柜机升级响应
message CMsgBodyBcUpgradeAck
{
    required string  deviceId = 1;//柜机ID
    required BC_UPGRADESTATUS  upgradeStatus= 2;//升级文件下载状态
}
//柜机二维码内容请求
message CMsgBodyQrCodeRequest
{
    required string  deviceId = 1;//柜机ID
}
//柜机二维码内容请求服务器响应
message CMsgBodyQrCodeAck
{
    required string deviceId = 1;//柜机ID
    required string commonQrCode = 2;//通用二维码内容
    required string wxQrCode = 3;//微信二维码内容
    required string alipayQrCode = 4;//支付宝二维码内容
    required int32 expireTime = 5;//二维码到期时间
}
//触发大柜机上传App日志
message CMsgBodyUploadAppLog
{
    required string uploadUrl = 1;//上传地址
}

